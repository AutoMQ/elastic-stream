/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Apply the maven-publish plugin to allow publishing to Maven Central.
    id 'maven-publish'
    id 'com.google.protobuf' version '0.9.1'
}

group 'sdk.elastic.storage'
version '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

java {
    withSourcesJar()
//    withJavadocJar()
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


def grpcVersion = '1.53.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.21.7'
def protocVersion = protobufVersion

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    // for test. Use 4.x since 5.x requires jdk 11+.
    testImplementation 'org.mockito:mockito-core:4.11.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    // Use flatbuffers to decode and encode sbp messages
    implementation group: 'com.google.flatbuffers', name: 'flatbuffers-java', version: '23.3.3'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.89.Final'

    // used for logging
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0'

    // used for conversion of kafka batch to RecordBatch. remove it afterwards.
    implementation('org.apache.kafka:kafka-clients:3.4.0') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    // used for grpc
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('sourcesJar') {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'client-java'

            from components.java
        }
    }
}
