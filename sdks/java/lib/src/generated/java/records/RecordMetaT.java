// automatically generated by the FlatBuffers compiler, do not modify

package records;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class RecordMetaT {
  private int offsetDelta;
  private int timestampDelta;
  private records.KeyValueT[] headers;
  private records.KeyValueT[] properties;

  public int getOffsetDelta() { return offsetDelta; }

  public void setOffsetDelta(int offsetDelta) { this.offsetDelta = offsetDelta; }

  public int getTimestampDelta() { return timestampDelta; }

  public void setTimestampDelta(int timestampDelta) { this.timestampDelta = timestampDelta; }

  public records.KeyValueT[] getHeaders() { return headers; }

  public void setHeaders(records.KeyValueT[] headers) { this.headers = headers; }

  public records.KeyValueT[] getProperties() { return properties; }

  public void setProperties(records.KeyValueT[] properties) { this.properties = properties; }


  public RecordMetaT() {
    this.offsetDelta = 0;
    this.timestampDelta = 0;
    this.headers = null;
    this.properties = null;
  }
}

