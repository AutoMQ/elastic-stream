// automatically generated by the FlatBuffers compiler, do not modify

package header;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class HeartbeatResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_1_21(); }
  public static HeartbeatResponse getRootAsHeartbeatResponse(ByteBuffer _bb) { return getRootAsHeartbeatResponse(_bb, new HeartbeatResponse()); }
  public static HeartbeatResponse getRootAsHeartbeatResponse(ByteBuffer _bb, HeartbeatResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public HeartbeatResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String clientId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer clientIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer clientIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public byte clientRole() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public header.DataNode dataNode() { return dataNode(new header.DataNode()); }
  public header.DataNode dataNode(header.DataNode obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public short errorCode() { int o = __offset(10); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public String errorMessage() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer errorMessageAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer errorMessageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createHeartbeatResponse(FlatBufferBuilder builder,
      int clientIdOffset,
      byte clientRole,
      int dataNodeOffset,
      short errorCode,
      int errorMessageOffset) {
    builder.startTable(5);
    HeartbeatResponse.addErrorMessage(builder, errorMessageOffset);
    HeartbeatResponse.addDataNode(builder, dataNodeOffset);
    HeartbeatResponse.addClientId(builder, clientIdOffset);
    HeartbeatResponse.addErrorCode(builder, errorCode);
    HeartbeatResponse.addClientRole(builder, clientRole);
    return HeartbeatResponse.endHeartbeatResponse(builder);
  }

  public static void startHeartbeatResponse(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addClientId(FlatBufferBuilder builder, int clientIdOffset) { builder.addOffset(0, clientIdOffset, 0); }
  public static void addClientRole(FlatBufferBuilder builder, byte clientRole) { builder.addByte(1, clientRole, 0); }
  public static void addDataNode(FlatBufferBuilder builder, int dataNodeOffset) { builder.addOffset(2, dataNodeOffset, 0); }
  public static void addErrorCode(FlatBufferBuilder builder, short errorCode) { builder.addShort(3, errorCode, 0); }
  public static void addErrorMessage(FlatBufferBuilder builder, int errorMessageOffset) { builder.addOffset(4, errorMessageOffset, 0); }
  public static int endHeartbeatResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public HeartbeatResponse get(int j) { return get(new HeartbeatResponse(), j); }
    public HeartbeatResponse get(HeartbeatResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

