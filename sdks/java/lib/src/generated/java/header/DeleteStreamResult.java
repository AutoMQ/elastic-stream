// automatically generated by the FlatBuffers compiler, do not modify

package header;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class DeleteStreamResult extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_1_21(); }
  public static DeleteStreamResult getRootAsDeleteStreamResult(ByteBuffer _bb) { return getRootAsDeleteStreamResult(_bb, new DeleteStreamResult()); }
  public static DeleteStreamResult getRootAsDeleteStreamResult(ByteBuffer _bb, DeleteStreamResult obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DeleteStreamResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public header.Stream deletedStream() { return deletedStream(new header.Stream()); }
  public header.Stream deletedStream(header.Stream obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public short errorCode() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public String errorMessage() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer errorMessageAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer errorMessageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createDeleteStreamResult(FlatBufferBuilder builder,
      int deletedStreamOffset,
      short errorCode,
      int errorMessageOffset) {
    builder.startTable(3);
    DeleteStreamResult.addErrorMessage(builder, errorMessageOffset);
    DeleteStreamResult.addDeletedStream(builder, deletedStreamOffset);
    DeleteStreamResult.addErrorCode(builder, errorCode);
    return DeleteStreamResult.endDeleteStreamResult(builder);
  }

  public static void startDeleteStreamResult(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addDeletedStream(FlatBufferBuilder builder, int deletedStreamOffset) { builder.addOffset(0, deletedStreamOffset, 0); }
  public static void addErrorCode(FlatBufferBuilder builder, short errorCode) { builder.addShort(1, errorCode, 0); }
  public static void addErrorMessage(FlatBufferBuilder builder, int errorMessageOffset) { builder.addOffset(2, errorMessageOffset, 0); }
  public static int endDeleteStreamResult(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DeleteStreamResult get(int j) { return get(new DeleteStreamResult(), j); }
    public DeleteStreamResult get(DeleteStreamResult obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

