// automatically generated by the FlatBuffers compiler, do not modify

package header;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class DataNode extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_1_21(); }
  public static DataNode getRootAsDataNode(ByteBuffer _bb) { return getRootAsDataNode(_bb, new DataNode()); }
  public static DataNode getRootAsDataNode(ByteBuffer _bb, DataNode obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DataNode __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int nodeId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String advertiseAddr() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer advertiseAddrAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer advertiseAddrInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createDataNode(FlatBufferBuilder builder,
      int nodeId,
      int advertiseAddrOffset) {
    builder.startTable(2);
    DataNode.addAdvertiseAddr(builder, advertiseAddrOffset);
    DataNode.addNodeId(builder, nodeId);
    return DataNode.endDataNode(builder);
  }

  public static void startDataNode(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addNodeId(FlatBufferBuilder builder, int nodeId) { builder.addInt(0, nodeId, 0); }
  public static void addAdvertiseAddr(FlatBufferBuilder builder, int advertiseAddrOffset) { builder.addOffset(1, advertiseAddrOffset, 0); }
  public static int endDataNode(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DataNode get(int j) { return get(new DataNode(), j); }
    public DataNode get(DataNode obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

