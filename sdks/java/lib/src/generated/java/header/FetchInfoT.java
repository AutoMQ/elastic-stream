// automatically generated by the FlatBuffers compiler, do not modify

package header;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class FetchInfoT {
  private long streamId;
  private int requestIndex;
  private long fetchOffset;
  private int batchMaxBytes;

  public long getStreamId() { return streamId; }

  public void setStreamId(long streamId) { this.streamId = streamId; }

  public int getRequestIndex() { return requestIndex; }

  public void setRequestIndex(int requestIndex) { this.requestIndex = requestIndex; }

  public long getFetchOffset() { return fetchOffset; }

  public void setFetchOffset(long fetchOffset) { this.fetchOffset = fetchOffset; }

  public int getBatchMaxBytes() { return batchMaxBytes; }

  public void setBatchMaxBytes(int batchMaxBytes) { this.batchMaxBytes = batchMaxBytes; }


  public FetchInfoT() {
    this.streamId = 0L;
    this.requestIndex = 0;
    this.fetchOffset = 0L;
    this.batchMaxBytes = 0;
  }
}

