// automatically generated by the FlatBuffers compiler, do not modify

package com.automq.elasticstream.client.flatc.header;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class CreateRangeRequest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static CreateRangeRequest getRootAsCreateRangeRequest(ByteBuffer _bb) { return getRootAsCreateRangeRequest(_bb, new CreateRangeRequest()); }
  public static CreateRangeRequest getRootAsCreateRangeRequest(ByteBuffer _bb, CreateRangeRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CreateRangeRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int timeoutMs() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public com.automq.elasticstream.client.flatc.header.Range range() { return range(new com.automq.elasticstream.client.flatc.header.Range()); }
  public com.automq.elasticstream.client.flatc.header.Range range(com.automq.elasticstream.client.flatc.header.Range obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createCreateRangeRequest(FlatBufferBuilder builder,
      int timeoutMs,
      int rangeOffset) {
    builder.startTable(2);
    CreateRangeRequest.addRange(builder, rangeOffset);
    CreateRangeRequest.addTimeoutMs(builder, timeoutMs);
    return CreateRangeRequest.endCreateRangeRequest(builder);
  }

  public static void startCreateRangeRequest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addTimeoutMs(FlatBufferBuilder builder, int timeoutMs) { builder.addInt(0, timeoutMs, 0); }
  public static void addRange(FlatBufferBuilder builder, int rangeOffset) { builder.addOffset(1, rangeOffset, 0); }
  public static int endCreateRangeRequest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    builder.required(o, 6);  // range
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CreateRangeRequest get(int j) { return get(new CreateRangeRequest(), j); }
    public CreateRangeRequest get(CreateRangeRequest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public CreateRangeRequestT unpack() {
    CreateRangeRequestT _o = new CreateRangeRequestT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(CreateRangeRequestT _o) {
    int _oTimeoutMs = timeoutMs();
    _o.setTimeoutMs(_oTimeoutMs);
    if (range() != null) _o.setRange(range().unpack());
    else _o.setRange(null);
  }
  public static int pack(FlatBufferBuilder builder, CreateRangeRequestT _o) {
    if (_o == null) return 0;
    int _range = _o.getRange() == null ? 0 : com.automq.elasticstream.client.flatc.header.Range.pack(builder, _o.getRange());
    return createCreateRangeRequest(
      builder,
      _o.getTimeoutMs(),
      _range);
  }
}

