// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/kvpb/kv.proto

package kvpb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorType int32

const (
	ErrorType_OK             ErrorType = 0
	ErrorType_UNKNOWN        ErrorType = 1
	ErrorType_NOT_FOUND      ErrorType = 2
	ErrorType_DATA_COMPACTED ErrorType = 3
)

var ErrorType_name = map[int32]string{
	0: "OK",
	1: "UNKNOWN",
	2: "NOT_FOUND",
	3: "DATA_COMPACTED",
}

var ErrorType_value = map[string]int32{
	"OK":             0,
	"UNKNOWN":        1,
	"NOT_FOUND":      2,
	"DATA_COMPACTED": 3,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}

func (ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{0}
}

type EventType int32

const (
	EventType_PUT    EventType = 0
	EventType_DELETE EventType = 1
)

var EventType_name = map[int32]string{
	0: "PUT",
	1: "DELETE",
}

var EventType_value = map[string]int32{
	"PUT":    0,
	"DELETE": 1,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{1}
}

type StoreGlobalConfigRequest struct {
	Changes              []*GlobalConfigItem `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	ConfigPrefix         []byte              `protobuf:"bytes,2,opt,name=config_prefix,json=configPrefix,proto3" json:"config_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *StoreGlobalConfigRequest) Reset()         { *m = StoreGlobalConfigRequest{} }
func (m *StoreGlobalConfigRequest) String() string { return proto.CompactTextString(m) }
func (*StoreGlobalConfigRequest) ProtoMessage()    {}
func (*StoreGlobalConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{0}
}
func (m *StoreGlobalConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoreGlobalConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoreGlobalConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoreGlobalConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreGlobalConfigRequest.Merge(m, src)
}
func (m *StoreGlobalConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *StoreGlobalConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreGlobalConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreGlobalConfigRequest proto.InternalMessageInfo

func (m *StoreGlobalConfigRequest) GetChanges() []*GlobalConfigItem {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *StoreGlobalConfigRequest) GetConfigPrefix() []byte {
	if m != nil {
		return m.ConfigPrefix
	}
	return nil
}

type StoreGlobalConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreGlobalConfigResponse) Reset()         { *m = StoreGlobalConfigResponse{} }
func (m *StoreGlobalConfigResponse) String() string { return proto.CompactTextString(m) }
func (*StoreGlobalConfigResponse) ProtoMessage()    {}
func (*StoreGlobalConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{1}
}
func (m *StoreGlobalConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoreGlobalConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoreGlobalConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StoreGlobalConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreGlobalConfigResponse.Merge(m, src)
}
func (m *StoreGlobalConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *StoreGlobalConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreGlobalConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreGlobalConfigResponse proto.InternalMessageInfo

type LoadGlobalConfigRequest struct {
	Names                [][]byte `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	ConfigPrefix         []byte   `protobuf:"bytes,2,opt,name=config_prefix,json=configPrefix,proto3" json:"config_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadGlobalConfigRequest) Reset()         { *m = LoadGlobalConfigRequest{} }
func (m *LoadGlobalConfigRequest) String() string { return proto.CompactTextString(m) }
func (*LoadGlobalConfigRequest) ProtoMessage()    {}
func (*LoadGlobalConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{2}
}
func (m *LoadGlobalConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoadGlobalConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoadGlobalConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoadGlobalConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadGlobalConfigRequest.Merge(m, src)
}
func (m *LoadGlobalConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *LoadGlobalConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadGlobalConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadGlobalConfigRequest proto.InternalMessageInfo

func (m *LoadGlobalConfigRequest) GetNames() [][]byte {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *LoadGlobalConfigRequest) GetConfigPrefix() []byte {
	if m != nil {
		return m.ConfigPrefix
	}
	return nil
}

type LoadGlobalConfigResponse struct {
	Items                []*GlobalConfigItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Revision             int64               `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LoadGlobalConfigResponse) Reset()         { *m = LoadGlobalConfigResponse{} }
func (m *LoadGlobalConfigResponse) String() string { return proto.CompactTextString(m) }
func (*LoadGlobalConfigResponse) ProtoMessage()    {}
func (*LoadGlobalConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{3}
}
func (m *LoadGlobalConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoadGlobalConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoadGlobalConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoadGlobalConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadGlobalConfigResponse.Merge(m, src)
}
func (m *LoadGlobalConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *LoadGlobalConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadGlobalConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadGlobalConfigResponse proto.InternalMessageInfo

func (m *LoadGlobalConfigResponse) GetItems() []*GlobalConfigItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *LoadGlobalConfigResponse) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

type WatchGlobalConfigRequest struct {
	ConfigPrefix         []byte   `protobuf:"bytes,1,opt,name=config_prefix,json=configPrefix,proto3" json:"config_prefix,omitempty"`
	Revision             int64    `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchGlobalConfigRequest) Reset()         { *m = WatchGlobalConfigRequest{} }
func (m *WatchGlobalConfigRequest) String() string { return proto.CompactTextString(m) }
func (*WatchGlobalConfigRequest) ProtoMessage()    {}
func (*WatchGlobalConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{4}
}
func (m *WatchGlobalConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchGlobalConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchGlobalConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchGlobalConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchGlobalConfigRequest.Merge(m, src)
}
func (m *WatchGlobalConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *WatchGlobalConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchGlobalConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchGlobalConfigRequest proto.InternalMessageInfo

func (m *WatchGlobalConfigRequest) GetConfigPrefix() []byte {
	if m != nil {
		return m.ConfigPrefix
	}
	return nil
}

func (m *WatchGlobalConfigRequest) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

type WatchGlobalConfigResponse struct {
	Changes              []*GlobalConfigItem `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	Revision             int64               `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	Error                *Error              `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WatchGlobalConfigResponse) Reset()         { *m = WatchGlobalConfigResponse{} }
func (m *WatchGlobalConfigResponse) String() string { return proto.CompactTextString(m) }
func (*WatchGlobalConfigResponse) ProtoMessage()    {}
func (*WatchGlobalConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{5}
}
func (m *WatchGlobalConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WatchGlobalConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WatchGlobalConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WatchGlobalConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchGlobalConfigResponse.Merge(m, src)
}
func (m *WatchGlobalConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *WatchGlobalConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchGlobalConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchGlobalConfigResponse proto.InternalMessageInfo

func (m *WatchGlobalConfigResponse) GetChanges() []*GlobalConfigItem {
	if m != nil {
		return m.Changes
	}
	return nil
}

func (m *WatchGlobalConfigResponse) GetRevision() int64 {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *WatchGlobalConfigResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GlobalConfigItem struct {
	Name                 []byte    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload              []byte    `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Error                *Error    `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Kind                 EventType `protobuf:"varint,4,opt,name=kind,proto3,enum=kvpb.EventType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GlobalConfigItem) Reset()         { *m = GlobalConfigItem{} }
func (m *GlobalConfigItem) String() string { return proto.CompactTextString(m) }
func (*GlobalConfigItem) ProtoMessage()    {}
func (*GlobalConfigItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{6}
}
func (m *GlobalConfigItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalConfigItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GlobalConfigItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GlobalConfigItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalConfigItem.Merge(m, src)
}
func (m *GlobalConfigItem) XXX_Size() int {
	return m.Size()
}
func (m *GlobalConfigItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalConfigItem.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalConfigItem proto.InternalMessageInfo

func (m *GlobalConfigItem) GetName() []byte {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *GlobalConfigItem) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GlobalConfigItem) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GlobalConfigItem) GetKind() EventType {
	if m != nil {
		return m.Kind
	}
	return EventType_PUT
}

type Error struct {
	Type                 ErrorType `protobuf:"varint,1,opt,name=type,proto3,enum=kvpb.ErrorType" json:"type,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa716125f2dc88f3, []int{7}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Error.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return m.Size()
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetType() ErrorType {
	if m != nil {
		return m.Type
	}
	return ErrorType_OK
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("kvpb.ErrorType", ErrorType_name, ErrorType_value)
	proto.RegisterEnum("kvpb.EventType", EventType_name, EventType_value)
	proto.RegisterType((*StoreGlobalConfigRequest)(nil), "kvpb.StoreGlobalConfigRequest")
	proto.RegisterType((*StoreGlobalConfigResponse)(nil), "kvpb.StoreGlobalConfigResponse")
	proto.RegisterType((*LoadGlobalConfigRequest)(nil), "kvpb.LoadGlobalConfigRequest")
	proto.RegisterType((*LoadGlobalConfigResponse)(nil), "kvpb.LoadGlobalConfigResponse")
	proto.RegisterType((*WatchGlobalConfigRequest)(nil), "kvpb.WatchGlobalConfigRequest")
	proto.RegisterType((*WatchGlobalConfigResponse)(nil), "kvpb.WatchGlobalConfigResponse")
	proto.RegisterType((*GlobalConfigItem)(nil), "kvpb.GlobalConfigItem")
	proto.RegisterType((*Error)(nil), "kvpb.Error")
}

func init() { proto.RegisterFile("api/kvpb/kv.proto", fileDescriptor_fa716125f2dc88f3) }

var fileDescriptor_fa716125f2dc88f3 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xff, 0x6e, 0xd2, 0x50,
	0x14, 0xe6, 0xf2, 0x53, 0x0e, 0x6c, 0x96, 0x93, 0x45, 0x3b, 0x8c, 0x15, 0xbb, 0x7f, 0xc8, 0x62,
	0x60, 0xc1, 0x27, 0x40, 0xe8, 0x8c, 0x61, 0x02, 0xe9, 0xca, 0x66, 0xe2, 0x1f, 0xa4, 0xc0, 0x5d,
	0xd7, 0x00, 0xbd, 0x5d, 0x5b, 0x89, 0xbc, 0x81, 0x89, 0x3e, 0x80, 0x8f, 0xe4, 0x9f, 0x3e, 0x82,
	0xc1, 0x17, 0x31, 0xed, 0x6d, 0xd1, 0xac, 0x74, 0x6e, 0xff, 0xdd, 0x73, 0xbe, 0xaf, 0xdf, 0xf7,
	0xdd, 0xdc, 0x73, 0x0a, 0x15, 0xdd, 0x36, 0x9b, 0xf3, 0x95, 0x3d, 0x69, 0xce, 0x57, 0x0d, 0xdb,
	0x61, 0x1e, 0xc3, 0xac, 0x5f, 0x56, 0x0f, 0x0c, 0x66, 0xb0, 0xa0, 0xd1, 0xf4, 0x4f, 0x1c, 0x93,
	0x6f, 0x40, 0x3c, 0xf7, 0x98, 0x43, 0xdf, 0x2e, 0xd8, 0x44, 0x5f, 0x74, 0x98, 0x75, 0x65, 0x1a,
	0x2a, 0xbd, 0xf9, 0x44, 0x5d, 0x0f, 0x4f, 0xa0, 0x30, 0xbd, 0xd6, 0x2d, 0x83, 0xba, 0x22, 0xa9,
	0x65, 0xea, 0xa5, 0xd6, 0x93, 0x86, 0xaf, 0xd4, 0xf8, 0x97, 0xfb, 0xce, 0xa3, 0x4b, 0x35, 0xa2,
	0xe1, 0x11, 0xec, 0x4d, 0x83, 0xf6, 0xd8, 0x76, 0xe8, 0x95, 0xf9, 0x59, 0x4c, 0xd7, 0x48, 0xbd,
	0xac, 0x96, 0x79, 0x73, 0x18, 0xf4, 0xe4, 0x67, 0x70, 0xb8, 0xc3, 0xd2, 0xb5, 0x99, 0xe5, 0x52,
	0x59, 0x83, 0xa7, 0x67, 0x4c, 0x9f, 0xed, 0x8a, 0x73, 0x00, 0x39, 0x4b, 0x5f, 0x86, 0x61, 0xca,
	0x2a, 0x2f, 0xee, 0x67, 0x39, 0x03, 0x31, 0xae, 0xca, 0x1d, 0xf1, 0x15, 0xe4, 0x4c, 0x8f, 0x2e,
	0xff, 0x77, 0x47, 0x4e, 0xc2, 0x2a, 0x3c, 0x72, 0xe8, 0xca, 0x74, 0x4d, 0x66, 0x05, 0x4e, 0x19,
	0x75, 0x5b, 0xcb, 0x1f, 0x41, 0xbc, 0xd4, 0xbd, 0xe9, 0xf5, 0xae, 0xf0, 0xb1, 0x98, 0x24, 0x1e,
	0xf3, 0x4e, 0xf1, 0x6f, 0x04, 0x0e, 0x77, 0xa8, 0x87, 0x97, 0x78, 0xf8, 0x53, 0xdd, 0xe1, 0x85,
	0x2f, 0x21, 0x47, 0x1d, 0x87, 0x39, 0x62, 0xa6, 0x46, 0xea, 0xa5, 0x56, 0x89, 0x6b, 0x29, 0x7e,
	0x4b, 0xe5, 0x88, 0xfc, 0x85, 0x80, 0x70, 0x5b, 0x1c, 0x11, 0xb2, 0xfe, 0xa3, 0x84, 0x77, 0x0b,
	0xce, 0x28, 0x42, 0xc1, 0xd6, 0xd7, 0x0b, 0xa6, 0xcf, 0xc2, 0x97, 0x89, 0xca, 0x7b, 0xb8, 0xe0,
	0x11, 0x64, 0xe7, 0xa6, 0x35, 0x13, 0xb3, 0x35, 0x52, 0xdf, 0x6f, 0x3d, 0x0e, 0x19, 0x2b, 0x6a,
	0x79, 0xda, 0xda, 0xa6, 0x6a, 0x00, 0xca, 0xa7, 0x90, 0x53, 0x22, 0xb6, 0xb7, 0xb6, 0xb9, 0xfd,
	0x5f, 0xb6, 0x0f, 0x71, 0xb6, 0x0f, 0xfa, 0x79, 0x96, 0xd4, 0x75, 0x75, 0x83, 0x06, 0x79, 0x8a,
	0x6a, 0x54, 0x1e, 0x77, 0xa0, 0xb8, 0x25, 0x63, 0x1e, 0xd2, 0x83, 0x9e, 0x90, 0xc2, 0x12, 0x14,
	0x46, 0xfd, 0x5e, 0x7f, 0x70, 0xd9, 0x17, 0x08, 0xee, 0x41, 0xb1, 0x3f, 0xd0, 0xc6, 0xa7, 0x83,
	0x51, 0xbf, 0x2b, 0xa4, 0x11, 0x61, 0xbf, 0xdb, 0xd6, 0xda, 0xe3, 0xce, 0xe0, 0xfd, 0xb0, 0xdd,
	0xd1, 0x94, 0xae, 0x90, 0x39, 0xae, 0x41, 0x71, 0x9b, 0x0f, 0x0b, 0x90, 0x19, 0x8e, 0x34, 0x21,
	0x85, 0x00, 0xf9, 0xae, 0x72, 0xa6, 0x68, 0x8a, 0x40, 0x5a, 0x5f, 0xd3, 0x90, 0xee, 0x5d, 0xe0,
	0x05, 0x54, 0x62, 0x5b, 0x80, 0x12, 0xcf, 0x9c, 0xb4, 0x91, 0xd5, 0x17, 0x89, 0x78, 0xb8, 0x3e,
	0x29, 0x3c, 0x07, 0xe1, 0xf6, 0xa8, 0xe3, 0x73, 0xfe, 0x59, 0xc2, 0x62, 0x55, 0xa5, 0x24, 0x78,
	0x2b, 0xfa, 0x01, 0x2a, 0xb1, 0xd9, 0x8b, 0xc2, 0x26, 0x8d, 0x7c, 0x14, 0x36, 0x71, 0x68, 0xe5,
	0xd4, 0x09, 0x79, 0x23, 0xfc, 0xd8, 0x48, 0xe4, 0xe7, 0x46, 0x22, 0xbf, 0x36, 0x12, 0xf9, 0xfe,
	0x5b, 0x4a, 0x4d, 0xf2, 0xc1, 0x8f, 0xe9, 0xf5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xd1,
	0xce, 0x08, 0xc9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVClient interface {
	StoreGlobalConfig(ctx context.Context, in *StoreGlobalConfigRequest, opts ...grpc.CallOption) (*StoreGlobalConfigResponse, error)
	LoadGlobalConfig(ctx context.Context, in *LoadGlobalConfigRequest, opts ...grpc.CallOption) (*LoadGlobalConfigResponse, error)
	WatchGlobalConfig(ctx context.Context, in *WatchGlobalConfigRequest, opts ...grpc.CallOption) (KV_WatchGlobalConfigClient, error)
}

type kVClient struct {
	cc *grpc.ClientConn
}

func NewKVClient(cc *grpc.ClientConn) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) StoreGlobalConfig(ctx context.Context, in *StoreGlobalConfigRequest, opts ...grpc.CallOption) (*StoreGlobalConfigResponse, error) {
	out := new(StoreGlobalConfigResponse)
	err := c.cc.Invoke(ctx, "/kvpb.KV/StoreGlobalConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) LoadGlobalConfig(ctx context.Context, in *LoadGlobalConfigRequest, opts ...grpc.CallOption) (*LoadGlobalConfigResponse, error) {
	out := new(LoadGlobalConfigResponse)
	err := c.cc.Invoke(ctx, "/kvpb.KV/LoadGlobalConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) WatchGlobalConfig(ctx context.Context, in *WatchGlobalConfigRequest, opts ...grpc.CallOption) (KV_WatchGlobalConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_KV_serviceDesc.Streams[0], "/kvpb.KV/WatchGlobalConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &kVWatchGlobalConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type KV_WatchGlobalConfigClient interface {
	Recv() (*WatchGlobalConfigResponse, error)
	grpc.ClientStream
}

type kVWatchGlobalConfigClient struct {
	grpc.ClientStream
}

func (x *kVWatchGlobalConfigClient) Recv() (*WatchGlobalConfigResponse, error) {
	m := new(WatchGlobalConfigResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KVServer is the server API for KV service.
type KVServer interface {
	StoreGlobalConfig(context.Context, *StoreGlobalConfigRequest) (*StoreGlobalConfigResponse, error)
	LoadGlobalConfig(context.Context, *LoadGlobalConfigRequest) (*LoadGlobalConfigResponse, error)
	WatchGlobalConfig(*WatchGlobalConfigRequest, KV_WatchGlobalConfigServer) error
}

// UnimplementedKVServer can be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (*UnimplementedKVServer) StoreGlobalConfig(ctx context.Context, req *StoreGlobalConfigRequest) (*StoreGlobalConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreGlobalConfig not implemented")
}
func (*UnimplementedKVServer) LoadGlobalConfig(ctx context.Context, req *LoadGlobalConfigRequest) (*LoadGlobalConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadGlobalConfig not implemented")
}
func (*UnimplementedKVServer) WatchGlobalConfig(req *WatchGlobalConfigRequest, srv KV_WatchGlobalConfigServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchGlobalConfig not implemented")
}

func RegisterKVServer(s *grpc.Server, srv KVServer) {
	s.RegisterService(&_KV_serviceDesc, srv)
}

func _KV_StoreGlobalConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreGlobalConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).StoreGlobalConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvpb.KV/StoreGlobalConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).StoreGlobalConfig(ctx, req.(*StoreGlobalConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_LoadGlobalConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadGlobalConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).LoadGlobalConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvpb.KV/LoadGlobalConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).LoadGlobalConfig(ctx, req.(*LoadGlobalConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_WatchGlobalConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchGlobalConfigRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KVServer).WatchGlobalConfig(m, &kVWatchGlobalConfigServer{stream})
}

type KV_WatchGlobalConfigServer interface {
	Send(*WatchGlobalConfigResponse) error
	grpc.ServerStream
}

type kVWatchGlobalConfigServer struct {
	grpc.ServerStream
}

func (x *kVWatchGlobalConfigServer) Send(m *WatchGlobalConfigResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _KV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvpb.KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreGlobalConfig",
			Handler:    _KV_StoreGlobalConfig_Handler,
		},
		{
			MethodName: "LoadGlobalConfig",
			Handler:    _KV_LoadGlobalConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchGlobalConfig",
			Handler:       _KV_WatchGlobalConfig_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/kvpb/kv.proto",
}

func (m *StoreGlobalConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreGlobalConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoreGlobalConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConfigPrefix) > 0 {
		i -= len(m.ConfigPrefix)
		copy(dAtA[i:], m.ConfigPrefix)
		i = encodeVarintKv(dAtA, i, uint64(len(m.ConfigPrefix)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Changes) > 0 {
		for iNdEx := len(m.Changes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Changes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintKv(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StoreGlobalConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoreGlobalConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoreGlobalConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *LoadGlobalConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoadGlobalConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoadGlobalConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConfigPrefix) > 0 {
		i -= len(m.ConfigPrefix)
		copy(dAtA[i:], m.ConfigPrefix)
		i = encodeVarintKv(dAtA, i, uint64(len(m.ConfigPrefix)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Names) > 0 {
		for iNdEx := len(m.Names) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Names[iNdEx])
			copy(dAtA[i:], m.Names[iNdEx])
			i = encodeVarintKv(dAtA, i, uint64(len(m.Names[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LoadGlobalConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoadGlobalConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoadGlobalConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revision != 0 {
		i = encodeVarintKv(dAtA, i, uint64(m.Revision))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintKv(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *WatchGlobalConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchGlobalConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchGlobalConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revision != 0 {
		i = encodeVarintKv(dAtA, i, uint64(m.Revision))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ConfigPrefix) > 0 {
		i -= len(m.ConfigPrefix)
		copy(dAtA[i:], m.ConfigPrefix)
		i = encodeVarintKv(dAtA, i, uint64(len(m.ConfigPrefix)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WatchGlobalConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WatchGlobalConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WatchGlobalConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKv(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Revision != 0 {
		i = encodeVarintKv(dAtA, i, uint64(m.Revision))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Changes) > 0 {
		for iNdEx := len(m.Changes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Changes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintKv(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GlobalConfigItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalConfigItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalConfigItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Kind != 0 {
		i = encodeVarintKv(dAtA, i, uint64(m.Kind))
		i--
		dAtA[i] = 0x20
	}
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKv(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Payload) > 0 {
		i -= len(m.Payload)
		copy(dAtA[i:], m.Payload)
		i = encodeVarintKv(dAtA, i, uint64(len(m.Payload)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintKv(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Error) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Error) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Error) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintKv(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Type != 0 {
		i = encodeVarintKv(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintKv(dAtA []byte, offset int, v uint64) int {
	offset -= sovKv(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StoreGlobalConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Changes) > 0 {
		for _, e := range m.Changes {
			l = e.Size()
			n += 1 + l + sovKv(uint64(l))
		}
	}
	l = len(m.ConfigPrefix)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StoreGlobalConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoadGlobalConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Names) > 0 {
		for _, b := range m.Names {
			l = len(b)
			n += 1 + l + sovKv(uint64(l))
		}
	}
	l = len(m.ConfigPrefix)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoadGlobalConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovKv(uint64(l))
		}
	}
	if m.Revision != 0 {
		n += 1 + sovKv(uint64(m.Revision))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchGlobalConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ConfigPrefix)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	if m.Revision != 0 {
		n += 1 + sovKv(uint64(m.Revision))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WatchGlobalConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Changes) > 0 {
		for _, e := range m.Changes {
			l = e.Size()
			n += 1 + l + sovKv(uint64(l))
		}
	}
	if m.Revision != 0 {
		n += 1 + sovKv(uint64(m.Revision))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovKv(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GlobalConfigItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	l = len(m.Payload)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovKv(uint64(l))
	}
	if m.Kind != 0 {
		n += 1 + sovKv(uint64(m.Kind))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Error) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != 0 {
		n += 1 + sovKv(uint64(m.Type))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovKv(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKv(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKv(x uint64) (n int) {
	return sovKv(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StoreGlobalConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreGlobalConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreGlobalConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Changes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Changes = append(m.Changes, &GlobalConfigItem{})
			if err := m.Changes[len(m.Changes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigPrefix", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigPrefix = append(m.ConfigPrefix[:0], dAtA[iNdEx:postIndex]...)
			if m.ConfigPrefix == nil {
				m.ConfigPrefix = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoreGlobalConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoreGlobalConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoreGlobalConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoadGlobalConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoadGlobalConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoadGlobalConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Names", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Names = append(m.Names, make([]byte, postIndex-iNdEx))
			copy(m.Names[len(m.Names)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigPrefix", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigPrefix = append(m.ConfigPrefix[:0], dAtA[iNdEx:postIndex]...)
			if m.ConfigPrefix == nil {
				m.ConfigPrefix = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoadGlobalConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoadGlobalConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoadGlobalConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &GlobalConfigItem{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			m.Revision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Revision |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchGlobalConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchGlobalConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchGlobalConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfigPrefix", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConfigPrefix = append(m.ConfigPrefix[:0], dAtA[iNdEx:postIndex]...)
			if m.ConfigPrefix == nil {
				m.ConfigPrefix = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			m.Revision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Revision |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WatchGlobalConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WatchGlobalConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WatchGlobalConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Changes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Changes = append(m.Changes, &GlobalConfigItem{})
			if err := m.Changes[len(m.Changes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
			}
			m.Revision = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Revision |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalConfigItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalConfigItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalConfigItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = append(m.Name[:0], dAtA[iNdEx:postIndex]...)
			if m.Name == nil {
				m.Name = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil {
				m.Payload = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &Error{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kind", wireType)
			}
			m.Kind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kind |= EventType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Error) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKv
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Error: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Error: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= ErrorType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKv
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKv
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKv
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKv(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKv
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKv(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKv
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKv
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKv
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKv
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKv
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKv
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKv        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKv          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKv = fmt.Errorf("proto: unexpected end of group")
)
