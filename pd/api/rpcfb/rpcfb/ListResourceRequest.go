// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package rpcfb

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ListResourceRequestT struct {
	TimeoutMs int32 `json:"timeout_ms"`
	ResourceType ResourceType `json:"resource_type"`
}

func (t *ListResourceRequestT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	ListResourceRequestStart(builder)
	ListResourceRequestAddTimeoutMs(builder, t.TimeoutMs)
	ListResourceRequestAddResourceType(builder, t.ResourceType)
	return ListResourceRequestEnd(builder)
}

func (rcv *ListResourceRequest) UnPackTo(t *ListResourceRequestT) {
	t.TimeoutMs = rcv.TimeoutMs()
	t.ResourceType = rcv.ResourceType()
}

func (rcv *ListResourceRequest) UnPack() *ListResourceRequestT {
	if rcv == nil { return nil }
	t := &ListResourceRequestT{}
	rcv.UnPackTo(t)
	return t
}

type ListResourceRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsListResourceRequest(buf []byte, offset flatbuffers.UOffsetT) *ListResourceRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ListResourceRequest{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsListResourceRequest(buf []byte, offset flatbuffers.UOffsetT) *ListResourceRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ListResourceRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ListResourceRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ListResourceRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ListResourceRequest) TimeoutMs() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ListResourceRequest) MutateTimeoutMs(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func (rcv *ListResourceRequest) ResourceType() ResourceType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return ResourceType(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *ListResourceRequest) MutateResourceType(n ResourceType) bool {
	return rcv._tab.MutateInt8Slot(6, int8(n))
}

func ListResourceRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ListResourceRequestAddTimeoutMs(builder *flatbuffers.Builder, timeoutMs int32) {
	builder.PrependInt32Slot(0, timeoutMs, 0)
}
func ListResourceRequestAddResourceType(builder *flatbuffers.Builder, resourceType ResourceType) {
	builder.PrependInt8Slot(1, int8(resourceType), 0)
}
func ListResourceRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
