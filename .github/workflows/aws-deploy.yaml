name: Deploy to AWS EKS

on:
  pull_request:
    branches: [ "main" ]
    types:
      - closed

jobs:
  deploy:
    strategy:
      matrix:
        go-version: [ "1.19" ]
        platform: [ "ubuntu-latest" ]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Go Cache
      uses: actions/cache@v3
      with:
        path: .go/cache
        key: ${{matrix.platform}}-${{matrix.go-version}}-go-build-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{matrix.platform}}-${{matrix.go-version}}-go-build-
          ${{matrix.platform}}-${{matrix.go-version}}-go-

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get Version
      id: version
      run: echo "version=github_$(make version)" >> $GITHUB_OUTPUT

    - name: Build images
      run: make manifest-list GO_VERSION=${{ matrix.go-version }} REGISTRY=${{ steps.login-ecr.outputs.registry }} VERSION=${{ steps.version.outputs.version }}

    - name: Deploy
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: set image statefulset/pm placement-manager=${{ steps.login-ecr.outputs.registry }}/placement-manager:${{ steps.version.outputs.version }}

    - name: Verify
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout status statefulset/pm
